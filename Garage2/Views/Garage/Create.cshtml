@model Garage2.Models.CheckInViewModel

@{
    ViewBag.Title = "Check-in";
}

@if (ViewBag.GarageFull != true)
{
    <h2>Park a vehicle</h2>
    <h4>@ViewBag.RegularSpaces of @Model.AllPlaces regular parking spaces left</h4>
    <h4>@ViewBag.MotorSpaces parking spaces reserved for motorcycles left</h4>

    if (ViewBag.NoSpace == true)
    {
        <h6>There is no space in the garage for your @Model.Vehicle.Type</h6>
    }

    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Vehicle.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Vehicle.Type, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Vehicle.Type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Vehicle.RegNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Vehicle.RegNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Vehicle.RegNumber, (string)ViewBag.regNErrorMessage, new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Vehicle.Color, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Vehicle.Color, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Vehicle.Color, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Vehicle.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Vehicle.Brand, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Vehicle.Brand, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Vehicle.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Vehicle.Model, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Vehicle.Model, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Vehicle.Wheels, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Vehicle.Wheels, new { htmlAttributes = new { @class = "form-control", text = "0", @Value = "0" } })
                    @Html.ValidationMessageFor(model => model.Vehicle.Wheels, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Park" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
}
else
{
    <h1>The garage is full right now</h1>
    <h3>Check-out a vehicle and try again</h3>

    @Html.ActionLink("Back to list", "Index")
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
