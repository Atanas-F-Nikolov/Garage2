@model IEnumerable<Garage2.Models.OverViewModel>

@{
    ViewBag.Title = "Overview";
    bool show = false;
    if (ViewBag.added != null)
    {
        show = (bool)ViewBag.added;
    }
}

<h2>@ViewBag.msg</h2>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container form-container">
        <div class="row">
            <div class="col-sm-6 col-md-4">
                @Html.Label("Registration")
                @Html.TextBox("reg", "", new { @class = "form-control" })
                @Html.Label("Color")
                @Html.TextBox("color", "", new { @class = "form-control" })
            </div>
            <div class="col-sm-6 col-md-4">
                @Html.Label("Type")
                @Html.DropDownList("type", EnumHelper.GetSelectList(typeof(Garage2.Models.VehicleType)), "All", new { @class = "form-control" })
                @Html.Label("Check-in time")
                <input name="time" type="date" class="form-control" value=@ViewBag.time>
            </div>
        </div>
        <div class="btn-group search">
            <input type="submit" name="search" value="Search" class="btn btn-default" />
            <input type="submit" name="show" value="Show all" class="btn btn-default" />
        </div>
    </div>
}
@if (Model.Count() > 0)
{
    <table id="detailsTable" class="table table-responsive">
        <tr>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.ParkingSpace).ToString(), "OverView", new { sort = (ViewBag.sort == "ParkingSpace descending") ? "ParkingSpace_descending" : "ParkingSpace", reg = ViewBag.reg, type = ViewBag.type, color = ViewBag.color, time = ViewBag.time, msg = (ViewBag.msg.Contains("Your") ? ViewBag.msg.Substring(0, ViewBag.msg.IndexOf("-")) : ViewBag.msg) })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Type).ToString(), "OverView", new { sort = (ViewBag.sort == "Type descending") ? "Type_descending" : "Type", reg = ViewBag.reg, type = ViewBag.type, color = ViewBag.color, time = ViewBag.time, msg = (ViewBag.msg.Contains("Your") ? ViewBag.msg.Substring(0, ViewBag.msg.IndexOf("-")) : ViewBag.msg) })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.RegNumber).ToString(), "OverView", new { sort = (ViewBag.sort == "RegNumber descending") ? "RegNumber_descending" : "RegNumber", reg = ViewBag.reg, type = ViewBag.type, time = ViewBag.time, msg = (ViewBag.msg.Contains("Your") ? ViewBag.msg.Substring(0, ViewBag.msg.IndexOf("-")) : ViewBag.msg) })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Color).ToString(), "OverView", new { sort = (ViewBag.sort == "Color descending") ? "Color_descending" : "Color", reg = ViewBag.reg, type = ViewBag.type, color = ViewBag.color, time = ViewBag.time, msg = (ViewBag.msg.Contains("Your") ? ViewBag.msg.Substring(0, ViewBag.msg.IndexOf("-")) : ViewBag.msg) })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.CheckInTimeStamp).ToString(), "OverView", new { sort = (ViewBag.sort == "CheckInTimeStamp descending") ? "CheckInTimeStamp_descending" : "CheckInTimeStamp", reg = ViewBag.reg, type = ViewBag.type, color = ViewBag.color, msg = (ViewBag.msg.Contains("Your") ? ViewBag.msg.Substring(0, ViewBag.msg.IndexOf("-")) : ViewBag.msg) })
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            if (show)
            {
                <tr class="success">
                    <td>
                        @Html.DisplayFor(modelItem => item.ParkingSpace)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RegNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Color)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CheckInTimeStamp)
                    </td>
                    <td>
                        <p class="details-btn details-control">Details</p> |
                        @Html.ActionLink("Check-out", "Delete", new { id = item.VehicleId })
                    </td>
                </tr>

                show = false;
            }
            else
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ParkingSpace)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RegNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Color)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CheckInTimeStamp)
                    </td>
                    <td>
                        <p class="details-btn details-control" data-request-url="@Url.Action("OverViewDetails", "Garage", new { id = item.VehicleId })">Details</p> |
                        @Html.ActionLink("Check-out", "Delete", new { id = item.VehicleId })
                    </td>
                </tr>
            }
            <tr class="hidden"></tr>
        }
    </table>
}
else
{
    <h3>Could not find any vehicles that matched your search</h3>
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/details.js"></script>