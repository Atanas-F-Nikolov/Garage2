@model IEnumerable<Garage2.Models.VehicleDetailsViewModel>

@{
    ViewBag.Title = "BasicOverView";
}

<h2>List of Vehicles</h2>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container form-container">
        <div class="row">
            <div class="col-sm-6 col-md-4">
                @Html.Label("Registration number")
                @Html.TextBox("regNr", "", new { @class = "form-control" })
            </div>
            <div class="col-sm-6 col-md-4">
                @Html.Label("Type")
                @Html.DropDownList("VehicleTypeId", null, "All", htmlAttributes: new { @class = "form-control" })
            </div>
        </div>
        <div class="btn-group search">
            <input type="submit" name="search" value="Search" class="btn btn-default" />
            <input type="submit" name="show" value="Show all" class="btn btn-default" />
        </div>
    </div>
}
@if (Model.Count() > 0)
{
    <table class="table colorTable">
        <tr>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Owner).ToString(), "BasicOverView", new { vehicleTypeId = ViewBag.VehicleType, regNr = ViewBag.regNr, sort = (ViewBag.Sort.Contains("Owner") ? ViewBag.Sort : "Owner") }, null)
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Type).ToString(), "BasicOverView", new { vehicleTypeId = ViewBag.VehicleType, regNr = ViewBag.regNr, sort = (ViewBag.Sort.Contains("Type") ? ViewBag.Sort : "Type") }, null)
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.RegNumber).ToString(), "BasicOverView", new { vehicleTypeId = ViewBag.VehicleType, regNr = ViewBag.regNr, sort = (ViewBag.Sort.Contains("RegNumber") ? ViewBag.Sort : "RegNumber") }, null)
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.ParkingTime).ToString(), "BasicOverView", new { vehicleTypeId = ViewBag.VehicleType, regNr = ViewBag.regNr, sort = (ViewBag.Sort.Contains("ParkTime") ? ViewBag.Sort : "ParkTime") }, null)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Owner)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RegNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ParkingTime)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.VehicleId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.VehicleId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.VehicleId })
                </td>
            </tr>
        }

    </table>
}
else
{
    <h3>Could not find any vehicles that matched your search</h3>
}
