@model Garage2.Models.VehicleIndexViewModel

@{
    ViewBag.Title = "Index";
}

<h2>@Model.Title</h2>
<h4>@Model.Message</h4>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container form-container">
        @Html.HiddenFor(x => x.Title)
        <div class="row">
            <div class="col-sm-6 col-md-4">
                @Html.Label("Registration number")
                @Html.TextBox("regNr", "", new { @class = "form-control" })
            </div>
            <div class="col-sm-6 col-md-4">
                @Html.Label("Type")
                @Html.DropDownList("VehicleTypeId", Model.VehicleTypes, "All", htmlAttributes: new { @class = "form-control" })
            </div>
        </div>
        <p data-toggle="collapse" data-target="#options" class="fake-link">Toggle advanced search</p>
        <div id="options" class="well well-sm row collapse">
            <div class="col-sm-4">
                @Html.Label("Color")
                @Html.TextBox("Color", "", new { @class = "form-control" })
            </div>
            <div class="col-sm-4">
                @Html.Label("Brand")
                @Html.TextBox("Brand", "", new { @class = "form-control" })
            </div>
            <div class="col-sm-4">
                @Html.Label("Model")
                @Html.TextBox("Model", "", new { @class = "form-control" })
            </div>
            <div class="col-sm-4">
                @Html.Label("Number of wheels")
                <input type="number" name="Wheels" class="form-control" />
            </div>
            <div class="col-sm-4">
                @Html.Label("Owner name")
                @Html.TextBox("Owner", "", new { @class = "form-control" })
            </div>
            <div class="col-sm-4">
                @Html.Label("Check in date")
                <input type="date" name="CheckIn" class="form-control" />
            </div>
        </div>
        <div class="btn-group search">
            <input type="submit" name="search" value="Search" class="btn btn-default" />
            <input type="submit" name="show" value="Show all" class="btn btn-default" />
        </div>
    </div>
}

@if (Model.Vehicles.Count > 0)
{
    <table class="table">
        <tr>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Vehicle.Owner).ToString(), "Index", "Vehicles", new { title = Model.Title, sort = (Model.Sort.Contains("Owner")? Model.Sort : "Owner"), RegNr = Model.SearchParams.RegNr, CheckIn = Model.SearchParams.CheckIn, Color = Model.SearchParams.Color, Brand = Model.SearchParams.Brand, Model = Model.SearchParams.Model, Wheels = Model.SearchParams.Wheels, Owner = Model.SearchParams.Owner, VehicleTypeId = Model.SearchParams.VehicleTypeId }, null)
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Vehicle.Type).ToString(), "Index", "Vehicles", new { title = Model.Title, sort = (Model.Sort.Contains("Type") ? Model.Sort : "Type"), RegNr = Model.SearchParams.RegNr, CheckIn = Model.SearchParams.CheckIn, Color = Model.SearchParams.Color, Brand = Model.SearchParams.Brand, Model = Model.SearchParams.Model, Wheels = Model.SearchParams.Wheels, Owner = Model.SearchParams.Owner, VehicleTypeId = Model.SearchParams.VehicleTypeId }, null)
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Vehicle.ParkingSpace).ToString(), "Index", "Vehicles", new { title = Model.Title, sort = (Model.Sort.Contains("ParkingSpace") ? Model.Sort : "ParkingSpace"), RegNr = Model.SearchParams.RegNr, CheckIn = Model.SearchParams.CheckIn, Color = Model.SearchParams.Color, Brand = Model.SearchParams.Brand, Model = Model.SearchParams.Model, Wheels = Model.SearchParams.Wheels, Owner = Model.SearchParams.Owner, VehicleTypeId = Model.SearchParams.VehicleTypeId }, null)
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Vehicle.Type.Size).ToString(), "Index", "Vehicles", new { title = Model.Title, sort = (Model.Sort.Contains("Size") ? Model.Sort : "Size"), RegNr = Model.SearchParams.RegNr, CheckIn = Model.SearchParams.CheckIn, Color = Model.SearchParams.Color, Brand = Model.SearchParams.Brand, Model = Model.SearchParams.Model, Wheels = Model.SearchParams.Wheels, Owner = Model.SearchParams.Owner, VehicleTypeId = Model.SearchParams.VehicleTypeId }, null)
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Vehicle.RegNumber).ToString(), "Index", "Vehicles", new { title = Model.Title, sort = (Model.Sort.Contains("RegNumber") ? Model.Sort : "RegNumber"), RegNr = Model.SearchParams.RegNr, CheckIn = Model.SearchParams.CheckIn, Color = Model.SearchParams.Color, Brand = Model.SearchParams.Brand, Model = Model.SearchParams.Model, Wheels = Model.SearchParams.Wheels, Owner = Model.SearchParams.Owner, VehicleTypeId = Model.SearchParams.VehicleTypeId }, null)
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Vehicle.Color).ToString(), "Index", "Vehicles", new { title = Model.Title, sort = (Model.Sort.Contains("Color") ? Model.Sort : "Color"), RegNr = Model.SearchParams.RegNr, CheckIn = Model.SearchParams.CheckIn, Color = Model.SearchParams.Color, Brand = Model.SearchParams.Brand, Model = Model.SearchParams.Model, Wheels = Model.SearchParams.Wheels, Owner = Model.SearchParams.Owner, VehicleTypeId = Model.SearchParams.VehicleTypeId }, null)
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Vehicle.Brand).ToString(), "Index", "Vehicles", new { title = Model.Title, sort = (Model.Sort.Contains("Brand") ? Model.Sort : "Brand"), RegNr = Model.SearchParams.RegNr, CheckIn = Model.SearchParams.CheckIn, Color = Model.SearchParams.Color, Brand = Model.SearchParams.Brand, Model = Model.SearchParams.Model, Wheels = Model.SearchParams.Wheels, Owner = Model.SearchParams.Owner, VehicleTypeId = Model.SearchParams.VehicleTypeId }, null)
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Vehicle.Model).ToString(), "Index", "Vehicles", new { title = Model.Title, sort = (Model.Sort.Contains("Model") ? Model.Sort : "Model"), RegNr = Model.SearchParams.RegNr, CheckIn = Model.SearchParams.CheckIn, Color = Model.SearchParams.Color, Brand = Model.SearchParams.Brand, Model = Model.SearchParams.Model, Wheels = Model.SearchParams.Wheels, Owner = Model.SearchParams.Owner, VehicleTypeId = Model.SearchParams.VehicleTypeId }, null)
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Vehicle.Wheels).ToString(), "Index", "Vehicles", new { title = Model.Title, sort = (Model.Sort.Contains("Wheels") ? Model.Sort : "Wheels"), RegNr = Model.SearchParams.RegNr, CheckIn = Model.SearchParams.CheckIn, Color = Model.SearchParams.Color, Brand = Model.SearchParams.Brand, Model = Model.SearchParams.Model, Wheels = Model.SearchParams.Wheels, Owner = Model.SearchParams.Owner, VehicleTypeId = Model.SearchParams.VehicleTypeId }, null)
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Vehicle.CheckInTimeStamp).ToString(), "Index", "Vehicles", new { title = Model.Title, sort = (Model.Sort.Contains("CheckInTimeStamp") ? Model.Sort : "CheckInTimeStamp"), RegNr = Model.SearchParams.RegNr, CheckIn = Model.SearchParams.CheckIn, Color = Model.SearchParams.Color, Brand = Model.SearchParams.Brand, Model = Model.SearchParams.Model, Wheels = Model.SearchParams.Wheels, Owner = Model.SearchParams.Owner, VehicleTypeId = Model.SearchParams.VehicleTypeId }, null)
            </th>
            <th></th>
        </tr>
        @foreach (var item in Model.Vehicles)
        {
            if (Model.HasAddedVehicle.Equals(true))
            {
                @:<tr class="success">
                Model.HasAddedVehicle = false;
            }
            else
            {
                @:<tr>
            }
                    <td>
                        @Html.DisplayFor(modelItem => item.Owner.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type.Type)
                    </td>
                    <td>
                        @if (item.Type.Size > 1)
                        {
                            @Html.DisplayFor(modelItem => item.ParkingSpace) @:- @(item.ParkingSpace + item.Type.Size - 1)
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.ParkingSpace)
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type.Size)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RegNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Color)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Brand)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Model)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Wheels)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CheckInTimeStamp)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                @:</tr>
                }
    </table>
}
else
{
    <h1>Could not find any vehicles that matched your search</h1>
}

